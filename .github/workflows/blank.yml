on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        user: [sondrelg]
        package: [base, does-not-exist]

    steps:
      - name: Check for package
        run: curl --silent --head --write-out "%{http_code}" -u token:${{ secrets.READ_PACKAGES_TOKEN }} https://api.github.com/users/${{ matrix.user }}/packages/docker/${{ matrix.package }}

      - uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.READ_PACKAGES_TOKEN }}
          script: |
            try {
              const response = await github.request("GET /users/${{ env.OWNER }}/packages/docker/${{ env.PACKAGE_NAME }}/versions",
                { per_page: ${{ env.PER_PAGE }}
              });
              for(version of response.data) {
                console.log("version: " + JSON.stringify(version))
                const tags = version.metadata.docker.tags
                for (var i = 0; i < tags.length; i++) {
                  console.log("tag: " + tags[i])
                  if (tags[i] === "${{ env.TAG }}") {
                    console.log("returning true")
                    return true
                  }
                }
              }
            } catch(err) {
              console.log(JSON.stringify(err))
            }
            console.log("returning false")
            return false
        env:
          OWNER: ${{ matrix.user }}
          PACKAGE_NAME: ${{ matrix.package }}
          PER_PAGE: 100
          TAG: latest
